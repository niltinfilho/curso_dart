--- IF - ELSE ---

CONDIÇÃO SIMPLES

Quando se usa apenas o "if", nesse caso não terá 2 condições, então ou acontece algo
ou não acontece nada. Ex:

  if(nota >= 7) {
    print('Aprovado!');
  }
  -> se a nota foi maior do que 7 mostre 'Aprovado'

CONDIÇÃO COMPOSTA

Quando se usa o "if" e o "else" (se/senão), nesse caso terá 2 ou mais condições,
então ou acontece algo ou acontece outra coisa. Ex:

  if(nota >= 7) {
    print('Aprovado!');
  } else {
    print('Reprovado!');
  }
  -> se a nota for maior do que 7 mostre 'Aprovado', senão mostre 'Reprovado'

  if(nota >= 9) {
    print('Aprovado!');
    print('Quadro de Honra!');
  } else if (nota >= 7) {
    print('Aprovado!');
  } else {
    print('Reprovado!');
  }
  -> se a nota for maior do que 9 mostre 'Aprovado' e 'Quadro de Honra', senão, se
  a nota for maior do que 7 mostre 'Aprovado', senão mostre 'Reprovado'


--- LAÇOS DE REPETIÇÃO ---

FOR

Estrutura otimizada para quantidade determinada de repetições.

O for é dividido em 3 partes, separados por ";":

  1 - Inicialização da variável de controle
  2 - Condição
  3 - Incremento/Decremento da variável

Ficando dessa forma, ex:

  for(int i = 1; i <= 10; i++) {
    print(i);
  }
  -> i recebe 1, enquanto i for menor ou igual a 10 mostre o valor de i, depois acrescente
  1 a i 


FOR IN 

Estrutura para percorrer listas.

O for in eh estruturado da seguinte maneira:

  for(var nota in notas) {
    print('O valor da nota eh $nota.');
  }

Sendo "nota" a variavel de controle, que percorre item por item da lista "notas".

Para percorrer um map o esquema eh basicamente o mesmo. Vamos considerar um map onde
as chaves sao os nomes dos alunos e as keys sao as notas no semestre.

  for(var registro in notas.entries) {
    print('O ${registro.key} tirou ${registro.value}');
  }


WHILE

Estrutura otimizada para quantidade indeterminada de repetições (de 0 a n vezes).

Assim como no for, o while tambem eh dividido em 3 partes, porem, a repeticao vai
continuar ate que algo aconteca (indeterminado), exemplo:

  var digitado = "";
  while(digitado != "sair") {
    stdout.write('Digite algo ou sair: ');
    digitado = stdin.readLineSync().toString();
  }
  print('Fim!');

  Nesse caso, a variavel "digitado" foi inicializada vazia, e a condicao do while 
  eh repetir o laco ate que "digitado" seja igual a "sair".
  

DO WHILE 

Estrutura identica ao while, so muda a ordem da condicao e execucao (de 1 a n vezes).

  do {
    stdout.write('Digite algo ou sair: ');
    digitado = stdin.readLineSync().toString();
  } while(digitado != "sair");

  Ou seja, faca "..." enquanto "...". A unica diferenca, no caso, eh que a verificacao
  eh feita depois da primeira execucao.


SWITCH 

Eh uma estrutura de selecoes multiplas, ou seja, nao eh apenas verdadeiro ou falso.

